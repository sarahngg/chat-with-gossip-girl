{"version":3,"sources":["components/MessageDetails.js","components/Message.js","components/TipLine.js","components/SendTips.js","App.js","reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["MessageDetails","this","props","showDetails","sentBy","react_default","a","createElement","className","id","Component","Message","handleHover","_this","toggleDetails","handleDoubleClick","deleteMessage","received","media","onMouseEnter","onMouseLeave","components_MessageDetails","name","key","onDoubleClick","tea","src","alt","connect","dispatch","type","TipLine","tipList","tips","map","tip","components_Message","state","storeTips","SendTips","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","e","setState","message","target","value","handleSubmit","preventDefault","addTipCount","addMessage","console","log","onSubmit","onChange","placeholder","payload","amount","App","components_TipLine","components_SendTips","initialState","storeCount","rootReducer","arguments","length","undefined","action","newTipCount","objectSpread","storeCountString","toString","concat","toConsumableArray","updatedStoreTips","filter","index","push","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a9c6f67.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass MessageDetails extends Component {\r\n    render() {\r\n        if (this.props.showDetails === true) {\r\n            if (this.props.sentBy === \"\") {\r\n                return (\r\n                        <span className=\"message-details received\">Message sent by you | #{this.props.id}</span>\r\n                )\r\n            } else {\r\n                return (\r\n                        <span className=\"message-details sent\">Message sent by <strong>{this.props.sentBy}</strong> | #{this.props.id}</span>\r\n                ) \r\n            }\r\n            \r\n        }\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\n\r\nexport default MessageDetails;","import React, { Component } from 'react';\r\nimport MessageDetails from './MessageDetails';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Message extends Component {\r\n    handleHover = () => {\r\n        //console.log('Show message details: ' + this.props.showDetails);\r\n        this.props.toggleDetails(this.props.id);\r\n    }\r\n    \r\n    // handleMouseClick = () => {\r\n    //     this.props.toggleDetails(this.props.id);\r\n    // }\r\n    handleDoubleClick = () => {\r\n        //console.log('Deleted message id: ' + this.props.id);\r\n        this.props.deleteMessage(this.props.id);\r\n    }\r\n    render() {\r\n      \r\n        //console.log(this.props.received)\r\n        if (this.props.received === true && this.props.media === \"\") {\r\n            return (\r\n                <div onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n                <MessageDetails sentBy={this.props.name} id={this.props.id} showDetails={this.props.showDetails}/>\r\n                <div className=\"message from\" key={this.props.id} onDoubleClick={this.handleDoubleClick}>\r\n                    <li> {this.props.tea} </li>\r\n                </div>   \r\n                </div>\r\n            )\r\n        } \r\n        if (this.props.received === false && this.props.media === \"\") {\r\n            return (\r\n                <div onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n                <MessageDetails sentBy={this.props.name} id={this.props.id} showDetails={this.props.showDetails}/>\r\n                <div className=\"message to\" key={this.props.id} onDoubleClick={this.handleDoubleClick}>\r\n                    <li> {this.props.tea} </li>\r\n                </div>\r\n                </div>\r\n        )} \r\n        if (this.props.media !== \"\") {\r\n            return (\r\n                <div onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n                <MessageDetails sentBy={this.props.name} id={this.props.id} showDetails={this.props.showDetails}/>\r\n                <div className=\"media\" key={this.props.id} onDoubleClick={this.handleDoubleClick}>\r\n                    <li> <img src={this.props.media} alt='Sent in by our viewers' /> </li>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div></div>\r\n        )   \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteMessage: (id) => { dispatch({type: 'DELETE_MESSAGE', id: id})},\r\n        toggleDetails: (id) => { dispatch({type: 'TOGGLE_MESSAGE_DETAILS', id: id})},\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Message);              ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\n\r\nclass TipLine extends Component {\r\n\r\n    render() {\r\n        \r\n        //Destructuring: storing props in variable\r\n        const { tips } = this.props;\r\n        \r\n        //Cycle through the array \"tips\" and map each individual \"tip\"\r\n        //to each div using the html template in return\r\n        const tipList = tips.map(tip => {\r\n            return(<Message key={tip.key} id={tip.id} showDetails={tip.showDetails} received={tip.received} name={tip.name} tea={tip.tea} media={tip.media}/>)\r\n        })\r\n        return(\r\n            <div className=\"messages-wrapper\">\r\n                <ul>\r\n                { tipList }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        tips: state.storeTips\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TipLine);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { addMessage } from '../actions';\r\n// import { addTipCount } from '../actions';\r\n\r\n//let handleSubmit\r\nclass SendTips extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {message: ''};\r\n    }\r\n    handleFormChange =(e)=> {\r\n        this.setState({\r\n            message: e.target.value\r\n        });\r\n    }\r\n    handleSubmit =(e)=> {\r\n        e.preventDefault(); //prevent default refreshing\r\n        //console.log(\"Form submitted!\", this.state.message);\r\n        this.props.addTipCount(1);\r\n        //console.log('SendTips.js ' + this.props.tipCount);\r\n        this.props.addMessage(this.state.message);\r\n        console.log(this.state.message);\r\n        this.setState({message: ''});\r\n        console.log(this.state.message);\r\n        //e.target.value = \"\";\r\n    }\r\n    \r\n    render() {\r\n        //console.log(this.props);\r\n        return(\r\n            <div className=\"centered reply\">\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <input type ='text' id='msg' onChange={this.handleFormChange} value={this.state.message} placeholder=\"Double click message to delete\"/>\r\n                    <button>Send</button>\r\n                    \r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return { \r\n//         tipCount: state.tipCount\r\n//     }\r\n// }\r\n\r\n// pass dispatch function from store to props of this component\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => { dispatch({type: 'ADD_MESSAGE', payload: message})},\r\n        addTipCount: (amount) => { dispatch({type: 'ADD_TIP_COUNT', payload: amount})}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SendTips);\r\n\r\n//export default SendTips;","import React, { Component } from 'react';\r\nimport TipLine from './components/TipLine';\r\nimport SendTips from './components/SendTips';\r\n// import MessageLoading from './components/MessageLoading';\r\n// import { connect } from 'react-redux';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        //console.log(this.props);\r\n        const { tips } = this.props;\r\n        return (\r\n            <div className = \"App\">\r\n                <div className = \"header contact centered\">\r\n                    <span className = \"nav left\">&lt; Messages</span>\r\n                    <span className = \"contact-name\"><strong>Gossip Girl</strong></span>\r\n                    <span className = \"nav right\">Details</span>\r\n                   \r\n                </div>\r\n                <TipLine tips={tips}/>\r\n                <SendTips />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","const initialState = {\r\n    storeCount: 5,\r\n    storeTips: [\r\n            { key:1, id: '1', showDetails: false, received: true, name:\"GossipGirl\", tea:\"Hey Upper East Siders. Gossip Girl here 🤫 And I have the biggest news ever.\", media:\"\"},\r\n            { key:2, id: '2', showDetails: false, received: false, name:\"\", tea:\"Do you have the tea? 🍵🍵\", media:\"\"},\r\n            { key:3, id: '3', showDetails: false, received: true, name:\"Melanie91\", tea:\"Spotted at Grand Central, bags in hand: Serena van der Woodsen.\", media:\"\"}, \r\n            { key:4, id: '4', showDetails: false, received: true, name:\"Melanie91\", tea:\"\", media:\"https://vignette.wikia.nocookie.net/gossipgirl/images/2/25/101GossipGirl0049.jpg\"}, \r\n            { key:5, id: '5', showDetails: false, received: true, name:\"GossipGirl\", tea:\"Was it only a year ago our It Girl mysteriously disappeared for “boarding school”? And just as suddenly, she’s back. Don’t believe me? See for yourselves. Lucky for us, Melanie91 sent proof. Thanks for the photo, Mel 😘\", media:\"\"},\r\n                \r\n    ],\r\n    \r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    if (action.type === 'ADD_TIP_COUNT') {\r\n        //console.log('invoked ADD_TIP_COUNT');\r\n        //console.log('Reducer before storeCount: '  + state.storeCount);\r\n        const newTipCount = state.storeCount + action.payload;\r\n        //console.log('Reducer after storeCount: ' + state.storeCount);\r\n        //console.log('Reducer after newTipCount: ' + newTipCount);\r\n        return {\r\n            ...state,\r\n            storeCount: newTipCount,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_MESSAGE') {\r\n        //console.log('invoked ADD_MESSAGE on' + action.payload);\r\n        const storeCountString = state.storeCount.toString()\r\n        return {\r\n            ...state,\r\n            storeTips: [...state.storeTips, {key:state.storeCount, id:storeCountString, showDetails: false, received: false, name:\"\", tea:action.payload, media:\"\"}]\r\n        }\r\n    }\r\n\r\n    if (action.type === 'DELETE_MESSAGE') {\r\n        //console.log('invoked DELETE_MESSAGE on' + action.id);\r\n        let updatedStoreTips = state.storeTips.filter(tips => {\r\n            return action.id !== tips.id\r\n        });\r\n        return {\r\n            ...state,\r\n            storeTips: updatedStoreTips\r\n        }\r\n    }\r\n    if (action.type === 'TOGGLE_MESSAGE_DETAILS') {\r\n        //console.log('invoked TOGGLE_MESSAGE_DETAILS on' + action.id);\r\n        let updatedStoreTips = [];\r\n        for (let index in state.storeTips) {\r\n            let tip = state.storeTips[index];\r\n            if (tip.id === action.id) {\r\n                //console.log(tip.showDetails);\r\n                tip.showDetails = !tip.showDetails;\r\n                //console.log(tip.showDetails);\r\n            }\r\n            updatedStoreTips.push(tip);\r\n        }\r\n        return  {\r\n            ...state,\r\n            storeTips: updatedStoreTips\r\n        }\r\n    }\r\n    \r\n    //console.log(action);\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store = {store}><App /></Provider>,\r\n    document.getElementById('root')\r\n    );\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}